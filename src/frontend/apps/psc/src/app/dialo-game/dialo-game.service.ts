import { Injectable } from '@angular/core';
import {KNode} from '@colabo-knalledge/knalledge_core/code/knalledge/kNode';
import {KnalledgeNodeService} from '@colabo-knalledge/knalledge_store_core/knalledge-node.service';
import { Observable, of } from 'rxjs';
import { catchError, map, tap } from 'rxjs/operators';

export enum DialoGameActions{};

export const DIALOGAME_OPENING_CARD_TYPE:string = 'const.dialogame.opening-card';

export const MAP_ID:string = '5b96619b86f3cc8057216a03';

@Injectable({
  providedIn: 'root'
})
export class DialoGameService {

  myCards:KNode[] = [];
  private openingCards:KNode[] = [];
  //playedOn:[]; decorations:[];

  constructor(
    private knalledgeNodeService: KnalledgeNodeService
  ) { }

  playCard(id:string):void{

  }

  getOpeningCards(forceRefresh:boolean = false):Observable<KNode[]>{
    let result:Observable<KNode[]>;
    if(forceRefresh || this.openingCards.length == 0){
      result = this.knalledgeNodeService.queryInMapofType(MAP_ID, DIALOGAME_OPENING_CARD_TYPE)
      .pipe(
        tap(nodesFromServer => this.assignCards(nodesFromServer))
      );
      return result;
    }
    else{
      return of(this.openingCards);
    }
  }

  assignCards(nodes:any):void{ //KNode[]):void{
    console.log('assignCards', nodes);
    this.openingCards = nodes;
  }

  getOpeningCardsAutoGenerated():Observable<KNode[]>{
    let cards:KNode[] = [];
    let card:KNode;
    for(var i:number = 0; i<17;i++){
      card = new KNode();
      card.name = "How the future looks when this goal is fulfilled?";
      if(card.dataContent === null){ card.dataContent = {};}
      card.dataContent.img = "assets/images/sdgs/s/sdg" + (i+1) + '.jpg';
      cards.push(card);
    }
    console.log('getOpeningCards', cards);
    return of(cards);
  }
}
